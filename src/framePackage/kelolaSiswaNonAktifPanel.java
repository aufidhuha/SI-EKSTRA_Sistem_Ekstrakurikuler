/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package framePackage;

import classPackage.siswaClass;
import static framePackage.mainFrame.contentPanel;
import javax.swing.table.DefaultTableModel;
import java.sql.*;
import javax.swing.JOptionPane;

/**
 *
 * @author ASUS
 */
public class kelolaSiswaNonAktifPanel extends javax.swing.JPanel {

    /**
     * Creates new form kelolaSiswaNonAktifPanel
     */
    public kelolaSiswaNonAktifPanel() {
        initComponents();
        dataTidakAktif();
    }

    static String isMode = "Tidak Aktif";

    void dataTidakAktif() {
        DefaultTableModel model = new DefaultTableModel();
        siswaClass dataSiswa = new siswaClass();

        model.addColumn("Kode Ekstra");
        model.addColumn("NISN");
        model.addColumn("Nama Siswa");
        model.addColumn("Jenis Kelamin");
        model.addColumn("Kelas");
        model.addColumn("Ekstrakurikuler");
        model.addColumn("Status");

        try {
            ResultSet rsVar = dataSiswa.showDataSiswa("Tidak Aktif");

            while (rsVar.next()) {
                String id = rsVar.getString("kode_ekstra");
                String nisn = rsVar.getString("nisn");
                String nama = rsVar.getString("nama");
                String jenis = rsVar.getString("jenis");
                String kelass = rsVar.getString("nama_kelas");
                String ekstra = rsVar.getString("nama_ekstra");
                String status = rsVar.getString("status");

                Object[] data = {id, nisn, nama, jenis, kelass, ekstra, status};
                model.addRow(data);
            }

            tableSiswaNonAktif.setModel(model);
        } catch (SQLException sQLException) {
            JOptionPane.showMessageDialog(null, "Error : " + sQLException.getMessage());
        }
    }

    void dataPurna() {
        DefaultTableModel model = new DefaultTableModel();
        siswaClass dataSiswa = new siswaClass();

        model.addColumn("Kode Ekstra");
        model.addColumn("NISN");
        model.addColumn("Nama Siswa");
        model.addColumn("Jenis Kelamin");
        model.addColumn("Kelas");
        model.addColumn("Ekstrakurikuler");
        model.addColumn("Status");

        try {
            ResultSet rsVar = dataSiswa.showDataSiswa("Purna");

            while (rsVar.next()) {
                String id = rsVar.getString("kode_ekstra");
                String nisn = rsVar.getString("nisn");
                String nama = rsVar.getString("nama");
                String jenis = rsVar.getString("jenis");
                String kelass = rsVar.getString("nama_kelas");
                String ekstra = rsVar.getString("nama_ekstra");
                String status = rsVar.getString("status");

                Object[] data = {id, nisn, nama, jenis, kelass, ekstra, status};
                model.addRow(data);
            }

            tableSiswaNonAktif.setModel(model);
        } catch (SQLException sQLException) {
            JOptionPane.showMessageDialog(null, "Error : " + sQLException.getMessage());
        }
    }

    void cariDataTidakAktif() {
        try {
            siswaClass cari = new siswaClass();
            DefaultTableModel model = cari.cariDataNamaSiswa("Tidak Aktif", txtCariNama.getText());

            tableSiswaNonAktif.setModel(model);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error : " + e.getMessage());
        }
    }

    void cariDataPurna() {
        try {
            siswaClass cari = new siswaClass();
            DefaultTableModel model = cari.cariDataNamaSiswa("Purna", txtCariNama.getText());

            tableSiswaNonAktif.setModel(model);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error : " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtCariNama = new javax.swing.JTextField();
        buttonPurna = new javax.swing.JButton();
        buttonTidakAktif = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableSiswaNonAktif = new javax.swing.JTable();
        buttonDaftar = new javax.swing.JButton();
        buttonDeleteAll = new javax.swing.JButton();
        buttonKelola = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("CARI SISWA");

        txtCariNama.setBackground(new java.awt.Color(204, 204, 204));
        txtCariNama.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        txtCariNama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCariNamaActionPerformed(evt);
            }
        });

        buttonPurna.setBackground(new java.awt.Color(102, 102, 102));
        buttonPurna.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        buttonPurna.setForeground(new java.awt.Color(255, 255, 255));
        buttonPurna.setText("DATA PURNA");
        buttonPurna.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        buttonPurna.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPurnaActionPerformed(evt);
            }
        });

        buttonTidakAktif.setBackground(new java.awt.Color(40, 167, 69));
        buttonTidakAktif.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        buttonTidakAktif.setForeground(new java.awt.Color(255, 255, 255));
        buttonTidakAktif.setText("DATA TIDAK AKTIF");
        buttonTidakAktif.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        buttonTidakAktif.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTidakAktifActionPerformed(evt);
            }
        });

        tableSiswaNonAktif.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tableSiswaNonAktif);

        buttonDaftar.setBackground(new java.awt.Color(0, 123, 255));
        buttonDaftar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        buttonDaftar.setForeground(new java.awt.Color(255, 255, 255));
        buttonDaftar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagesPackage/icons8-choice-24.png"))); // NOI18N
        buttonDaftar.setText("DAFTAR NON-AKTIF");
        buttonDaftar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        buttonDaftar.setIconTextGap(8);
        buttonDaftar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDaftarActionPerformed(evt);
            }
        });

        buttonDeleteAll.setBackground(new java.awt.Color(211, 47, 47));
        buttonDeleteAll.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        buttonDeleteAll.setForeground(new java.awt.Color(255, 255, 255));
        buttonDeleteAll.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagesPackage/icons8-delete-all-24.png"))); // NOI18N
        buttonDeleteAll.setText("HAPUS SEMUA DATA");
        buttonDeleteAll.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        buttonDeleteAll.setIconTextGap(8);
        buttonDeleteAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteAllActionPerformed(evt);
            }
        });

        buttonKelola.setBackground(new java.awt.Color(108, 117, 125));
        buttonKelola.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        buttonKelola.setForeground(new java.awt.Color(255, 255, 255));
        buttonKelola.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagesPackage/icons8-manage-24.png"))); // NOI18N
        buttonKelola.setText("KELOLA");
        buttonKelola.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        buttonKelola.setIconTextGap(8);
        buttonKelola.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonKelolaActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(30, 58, 138));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("DATA SISWA NON-AKTIF");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel8)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel8)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(63, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonDeleteAll, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonKelola, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(buttonDaftar, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtCariNama, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonTidakAktif, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(buttonPurna, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1024, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(57, 57, 57))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCariNama, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonPurna, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonTidakAktif, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonDaftar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonKelola, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonDeleteAll, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buttonPurnaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPurnaActionPerformed
        // TODO add your handling code here:
        isMode = "Purna";
        buttonTidakAktif.setBackground(new java.awt.Color(102, 102, 102));
        buttonPurna.setBackground(new java.awt.Color(40, 167, 69));
        dataPurna();
    }//GEN-LAST:event_buttonPurnaActionPerformed

    private void buttonTidakAktifActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTidakAktifActionPerformed
        // TODO add your handling code here:
        isMode = "Tidak Aktif";
        buttonTidakAktif.setBackground(new java.awt.Color(40, 167, 69));
        buttonPurna.setBackground(new java.awt.Color(102, 102, 102));
        dataTidakAktif();
    }//GEN-LAST:event_buttonTidakAktifActionPerformed

    private void buttonKelolaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonKelolaActionPerformed
        // TODO add your handling code here:
        int choiceRow = tableSiswaNonAktif.getSelectedRow();

        if (choiceRow < 0) {
            JOptionPane.showMessageDialog(null, "Harap memilih data");
            return;
        }

        String kode = tableSiswaNonAktif.getValueAt(choiceRow, 0).toString();
        String nisn = tableSiswaNonAktif.getValueAt(choiceRow, 1).toString();
        String nama = tableSiswaNonAktif.getValueAt(choiceRow, 2).toString();
        String jenis = tableSiswaNonAktif.getValueAt(choiceRow, 3).toString();
        String kelas = "";
         
        if (tableSiswaNonAktif.getValueAt(choiceRow, 4) != null) {
            kelas = tableSiswaNonAktif.getValueAt(choiceRow, 4).toString();
        } else {
            kelas = "";
        }
        
        String ekstra = "";
        
        if (tableSiswaNonAktif.getValueAt(choiceRow, 5) != null) {
            ekstra = tableSiswaNonAktif.getValueAt(choiceRow, 5).toString();
        } else {
            ekstra = "";
        }                
                
        String status = tableSiswaNonAktif.getValueAt(choiceRow, 6).toString();

        contentPanel.removeAll();
        contentPanel.add(new formSiswaPanel());
        contentPanel.revalidate();
        contentPanel.repaint();

        formSiswaPanel.txtKodeEkstra.setText(kode);
        formSiswaPanel.txtNISN.setText(nisn);
        formSiswaPanel.txtNamaSiswa.setText(nama);
        formSiswaPanel.cbJenisKelamin.setSelectedItem(jenis);
        formSiswaPanel.txtKelasSiswa.setText(kelas);
        formSiswaPanel.txtJenisEkstra.setText(ekstra);
        formSiswaPanel.cbStatus.setSelectedItem(status);
        formSiswaPanel.buttonSimpanUbah.setText("UBAH");
    }//GEN-LAST:event_buttonKelolaActionPerformed

    private void buttonDaftarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDaftarActionPerformed
        // TODO add your handling code here:
        contentPanel.removeAll();
        contentPanel.add(new dataSiswaNonAktifPanel());
        contentPanel.revalidate();
        contentPanel.repaint();
    }//GEN-LAST:event_buttonDaftarActionPerformed

    private void txtCariNamaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCariNamaActionPerformed
        // TODO add your handling code here:
        if (isMode.equalsIgnoreCase("Tidak Aktif")) {
            cariDataTidakAktif();
        } else {
            cariDataPurna();
        }
    }//GEN-LAST:event_txtCariNamaActionPerformed

    private void buttonDeleteAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteAllActionPerformed
        // TODO add your handling code here:
        siswaClass deleteAll = new siswaClass();
        int rowCount = tableSiswaNonAktif.getRowCount();

        if (rowCount == 0) {
            JOptionPane.showMessageDialog(null, "Tidak ada data yang dihapus");
            return;
        }

        if (isMode.equalsIgnoreCase("Tidak Aktif")) {
            deleteAll.deleteDataSiswaAllStatus("Tidak Aktif");
            dataTidakAktif();
        } else {
            deleteAll.deleteDataSiswaAllStatus("Purna");
            dataPurna();
        }
    }//GEN-LAST:event_buttonDeleteAllActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonDaftar;
    private javax.swing.JButton buttonDeleteAll;
    private javax.swing.JButton buttonKelola;
    private javax.swing.JButton buttonPurna;
    private javax.swing.JButton buttonTidakAktif;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableSiswaNonAktif;
    private javax.swing.JTextField txtCariNama;
    // End of variables declaration//GEN-END:variables
}
